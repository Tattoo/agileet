#summary Theme task for iteration 4

= Big projects and agile methods =

To get big projects and agile methods to work together, one can either scale the methods, or break the project down for teams of ~10 persons (which is the average team size in most agile methods). 

Agile methods, although empirically proven`[`2`]` to be successfully applied to large projects, don't usually give any details on how to deal with these extra challenges  imposed by large projects:
 * Communication overhead, or how to optimize communication
 * Project roles and their distribution
 * How to deal with geographical scatterness
 * Manage work politics, eg. numerous stakeholders

One challenge is to differiante with _project personnel_ and _organizational structure_. `[`1`]` One must also be prepared in case of clashes, since not actively working in team means one is not part of the active interpersonal communication which leads to project actions not being transparent. This could lead to mistrust and therefore demands of rigid practices may arise.

==Scrum==

One team consists of 7 or less persons. However, a project can consist of many teams. Therefore, on Cockburn scale, Scrum can handle anything from C6 to L100`[`2`]`.

Inter-team communication is facilitated by _scrum of scrums_, ie. the delegates of each team hold their own scrum.

Scrum doesn't specify any methods to help with the communication overhead or practical advices. On the other hand, it is in Scrum's ideology not to say anything about everyday practicalities.

==XP==

Compared to Scrum, XP is more oriented towards everyday practicalities with very low, rigid ceremony. According to Larman`[`2`]`, XP facilitates projects on levels E6, D6, C6, E20, D20, C20 on Cockburn scale. 

==Others==

Larman`[`2`]` rates both UP and EVO to handle all levels of Cockburn scale. It doesen't(?) specify how it is applied to large projects.


= Cockburn scale =

|| *Criticality* || ||Â || || ||
|| *Life* || L6|| L20|| L40 || L100 ||
|| *Essential money* || E6 || E20 || E40 || E100 ||
|| *Discretionary money* || D6 || D20 || D40 || D100 ||
|| *Comfort* || C6 || C20 || C40 || C100 ||
|| || *1-6* || *-20* || *-40* || *-100* || *Number of people* ||

= References =
 * `[`1`]` [http://www.cio.com/article/442264/Cargo_Cult_Methodology_How_Agile_Can_Go_Terribly_Terribly_Wrong Article on failed adoptation of agile methods]
 * `[`2`]` C. Larman: _Agile & Iterative Development_

= Other =
 *  [http://scalingsoftwareagility.wordpress.com/ Blog about scaling agility]